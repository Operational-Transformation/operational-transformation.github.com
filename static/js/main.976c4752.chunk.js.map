{"version":3,"sources":["generic/types/operation.ts","generic/util/uuid.ts","generic/types/visualizationState.ts","generic/types/clientLog.ts","generic/visualizationStateReducer.ts","generic/OperationVisualization.tsx","generic/sharedStyles.ts","generic/ArrowDiagram.tsx","generic/SynchronizationStateVisualization.tsx","generic/OperationHoverProvider.tsx","generic/ClientAndSocketsVisualization.tsx","generic/ClientLogVisualization.tsx","generic/hooks/useIsInitialRender.ts","generic/ServerVisualization.tsx","generic/Visualization.tsx","applicationSpecific/plainTextShared.tsx","applicationSpecific/codemirror-adapter.ts","applicationSpecific/plainTextWithBasicOperations.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ClientName","s4","Math","floor","random","toString","substring","generateUuid","SynchronizationStateStatus","ClientEntryType","createNewOperation","base","author","transformedAgainst","meta","id","transformOperation","transformationFunction","a","b","aWrappedPrime","bTextPrime","revision","composeOperation","compositionFunction","first","second","length","Error","getLatestSynchronizationState","clientLog","initialSynchronizationState","newState","clientUserOperation","functions","clientState","baseOperation","clientName","toServer","fromServer","snapshot","synchronizationState","status","SYNCHRONIZED","serverRevision","operationToSendToServer","newSynchronizationState","AWAITING_OPERATION","awaitedOperation","operationsToSendToServer","newClientLogEntry","type","USER_EDIT_IMMEDIATELY_SENT_TO_SERVER","operation","buffer","AWAITING_OPERATION_WITH_BUFFER","USER_EDIT_STORED_AS_BUFFER","USER_EDIT_ADDED_TO_BUFFER","processClientUserOperation","compose","entry","apply","sendOperationToClient","client","onServerReceive","visualizationState","clientLens","get","remainingOperations","newClientState","nextVisualizationState","set","server","transformedOperation","operations","slice","reduce","op","concurrentOp","transform","operationToBroadcast","newServerState","receiveOperationFromClient","alice","bob","clientReceiveOperation","receivedOperation","undefined","transformedReceivedOperationToApply","RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED","RECEIVED_OWN_OPERATION","acknowledgedOperation","transformedReceivedOperation","transformedAwaitedOperation","RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION","RECEIVED_OWN_OPERATION_AND_SENT_BUFFER","sentBuffer","onceTransformedReceivedOperation","twiceTransformedReceivedOperation","transformedBuffer","RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER","bufferOperation","transformedBufferOperation","processOperationFromServer","SelfOpenStatus","useSharedStyles","createUseStyles","site","background","padding","margin","verticalAlign","getClientColor","Alice","Bob","SvgArrow","start","end","shaftWidth","tipLength","tipWidth","color","diffX","x","diffY","y","sqrt","tipToShaftLength","shaftLength","fill","d","operationArrowStyle","interpolate","lambda","useStyles","lineHeight","synchronizationStateOperation","stateLabel","makeSynchronizationStateVisualization","OperationVisualization","clientClasses","className","OperationHoverContext","createContext","OperationHoverProvider","props","stateHandle","useState","Provider","value","children","useOperationStyles","display","width","height","borderRadius","tooltip","fontSize","isRelated","transformationPlural","count","renderRelatedOperation","relatedOperation","xs","ys","l","min","i","isOneArrayPrefixOfTheOther","transformedAgainstDifference","SocketDirection","makeOperationVisualization","applicationSpecific","classes","style","tooltipPlacement","otherProps","tooltipContent","setTooltipContent","Closed","selfOpenStatus","setSelfOpenStatus","useContext","hoveredOperation","setHoveredOperation","useEffect","Closing","onOpen","useCallback","Open","renderOperation","textAlign","fontWeight","onClose","isRelatedOperationHovered","Tooltip","key","arrow","title","open","placement","clsx","clientLogItem","transition","overflow","position","left","right","bottom","clientLogEntry","inlineOperation","makeClientLogItemVisualization","SynchronizationStateVisualization","ArrowDiagram","arrows","xmlns","opacity","map","centerPoint","top","makeArrowDiagram","UserEditImmediatelySentToServerVisualization","logEntry","UserEditStoredAsBufferVisualization","UserEditAddedToBufferVisualization","ReceivedOwnOperationVisualization","ReceivedOwnOperationAndSentBufferVisualization","ReceivedServerOperationWhileSynchronizedVisualization","ReceivedServerOperationWhileAwaitingOperationVisualization","topLeft","topRight","bottomLeft","bottomRight","marginTop","ReceivedServerOperationWhileAwaitingOperationWithBufferVisualization","topCenter","bottomCenter","measuredHeight","setMeasuredHeight","setInnerDiv","innerDiv","rect","getBoundingClientRect","ref","zIndex","renderClientLogEntry","useSocketOperationStyles","operationInSocket","transitionProperty","transitionDuration","makeOperationInSocket","positionStyle","isInitialRender","setIsInitialRender","timeout","setTimeout","clearTimeout","useIsInitialRender","initialPositionTop","positionTop","hoverStyle","disableHover","pointerEvents","onTransitionEnd","useSocketStyles","socket","line","borderLeft","overflowY","overflowX","receiveButton","backgroundColor","useClientStyles","flexDirection","paddingBottom","borderBottom","sockets","justifyContent","makeClientAndSocketsVisualization","SocketVisualization","OperationInSocket","queue","onReceiveClick","direction","socketClasses","queueEmpty","delayedQueue","setDelayedQueue","filter","includes","positionInverter","DOWN","IconButton","onClick","disabled","UP","leavingOps","o","makeSocketVisualization","ClientLogVisualization","ClientLogItemVisualization","makeClientLogVisualization","EditorComponent","onClientOperation","onClientReceiveClick","onServerReceiveClick","state","sharedClasses","editorHandleRef","useRef","onClientReceive","operationToApply","current","applyOperation","getClientIcon","onUserChange","useServerStyles","operationInLog","marginRight","stateTable","paddingRight","container","clients","replaceInvisibleCharacters","str","replace","useCodeMirrorStyles","codeMirrorContainer","border","flex","editorConfiguration","lineNumbers","showInvisibles","posLe","ch","cmpPos","BasicTextOperationType","CodeMirrorAdapter","changes","doc","docEndLength","indexFromPos","lastLine","getLine","codemirrorDocLength","TextOperation","retain","inverse","pos","sumLengths","strArr","sum","updateIndexFromPos","change","arr","from","to","text","removed","fromIndex","restLength","removedLines","delete","insert","join","operationFromCodeMirrorChanges","cm","ops","index","isRetain","isInsert","replaceRange","posFromIndex","isDelete","makeInsertOperation","content","Insert","makeDeleteOperation","Delete","aggregatedBasicTextOperationToTextOperation","aggregatedBasicTextOperation","textLength","textOperation","basicTextOperation","applyOperationToCodeMirror","CodeMirrorComponent","editor","getDoc","getValue","push","textOperationToAggregatedBasicTextOperation","forwardRef","codeMirrorClasses","initialText","setEditor","applyingOperationFromServerRef","onChanges","on","off","useImperativeHandle","options","editorDidMount","plainTextWithBasicOperationsComponents","renderBasicOperation","renderSnapshot","whiteSpace","fontFamily","transformInsertAgainstDeleteTextOperation","deletedLengthBeforeInsertion","transformSingleAgainstList","bs","headB","tailBs","bPrime","minPosition","totalLength","max","transformBasicTextOperation","aPrimes","headBPrimes","transformListAgainstList","aPrimesPrimes","tailBPrimes","as","currBs","flatMap","bsPrime","plainTextWithBasicOperationsFunctions","wrapper","header","Visualization","applicationSpecificFunctions","applicationSpecificComponents","ServerVisualization","makeServerVisualization","ClientAndSocketsVisualization","aliceLens","globalState","aliceState","bobLens","bobState","initialSnapshot","initialClientAndSocketsVisualizationState","makeInitialVisualizationState","setVisualizationState","makeClientProps","makeVisualization","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.976c4752.chunk.js","sourcesContent":["import { generateUuid } from \"../util/uuid\";\nimport { CompositionFunction, TransformationFunction } from \"./applicationSpecific\";\n\ntype OperationId = string; // persistent, not changed by transformation\n\nexport enum ClientName {\n  Alice = \"Alice\",\n  Bob = \"Bob\",\n}\n\ninterface OperationMeta {\n  author: ClientName;\n  id: OperationId;\n}\n\nexport interface OperationWithoutPayload {\n  meta: OperationMeta;\n  transformedAgainst: OperationId[];\n}\n\nexport interface Operation<OpT> extends OperationWithoutPayload {\n  base: OpT;\n}\n\nexport interface OperationAndRevision<OpT> extends Operation<OpT> {\n  revision: number; // non-negative integer\n}\n\nexport const createNewOperation = <OpT>(base: OpT, author: ClientName): Operation<OpT> => ({\n  base,\n  transformedAgainst: [],\n  meta: {\n    author,\n    id: generateUuid(),\n  },\n});\n\nexport const transformOperation = <OpT>(\n  transformationFunction: TransformationFunction<OpT>,\n  a: Operation<OpT>, // server operation\n  b: OperationAndRevision<OpT>, // client operation\n): [Operation<OpT>, OperationAndRevision<OpT>] => {\n  const [aWrappedPrime, bTextPrime] = transformationFunction(a.base, b.base);\n  const aPrime: Operation<OpT> = {\n    base: aWrappedPrime,\n    transformedAgainst: [...a.transformedAgainst, b.meta.id],\n    meta: a.meta,\n  };\n  const bPrime: OperationAndRevision<OpT> = {\n    base: bTextPrime,\n    transformedAgainst: [...b.transformedAgainst, a.meta.id],\n    meta: b.meta,\n    revision: b.revision + 1,\n  };\n  return [aPrime, bPrime];\n};\n\nexport const composeOperation = <OpT>(\n  compositionFunction: CompositionFunction<OpT>,\n  first: OperationAndRevision<OpT>,\n  second: OpT,\n): OperationAndRevision<OpT> => {\n  if (first.transformedAgainst.length !== 0) {\n    throw new Error(\n      \"you shouldn't compose a transformed operation because composition and transformation are not compatible\",\n    );\n  }\n\n  return {\n    meta: {\n      author: first.meta.author,\n      id: generateUuid(),\n    },\n    transformedAgainst: [],\n    revision: first.revision,\n    base: compositionFunction(first.base, second),\n  };\n};\n","function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n\nexport function generateUuid(): string {\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n}\n","import { Operation, OperationAndRevision } from \"./operation\";\nimport { ClientLogEntry } from \"./clientLog\";\n\nexport type Queue<A> = A[];\n\nexport interface ServerVisualizationState<SnapshotT, OpT> {\n  operations: Operation<OpT>[];\n  snapshot: SnapshotT;\n}\n\nexport enum SynchronizationStateStatus {\n  SYNCHRONIZED = \"SYNCHRONIZED\",\n  AWAITING_OPERATION = \"AWAITING_OPERATION\",\n  AWAITING_OPERATION_WITH_BUFFER = \"AWAITING_OPERATION_WITH_BUFFER\",\n}\n\ninterface SynchronizationStateSynchronized {\n  status: SynchronizationStateStatus.SYNCHRONIZED;\n  serverRevision: number; // non-negative integer\n}\n\ninterface SynchronizationStateAwaitingAck<OpT> {\n  status: SynchronizationStateStatus.AWAITING_OPERATION;\n  awaitedOperation: OperationAndRevision<OpT>;\n}\n\ninterface SynchronizationStateAwaitingAckWithOperation<OpT> {\n  status: SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER;\n  awaitedOperation: OperationAndRevision<OpT>;\n  buffer: OperationAndRevision<OpT>;\n}\n\nexport type SynchronizationState<OpT> =\n  | SynchronizationStateSynchronized\n  | SynchronizationStateAwaitingAck<OpT>\n  | SynchronizationStateAwaitingAckWithOperation<OpT>;\n\nexport interface ClientLogItem<OpT> {\n  entry: ClientLogEntry<OpT>;\n  newState: SynchronizationState<OpT>;\n}\n\nexport type ClientLog<OpT> = ClientLogItem<OpT>[];\n\nexport interface ClientAndSocketsVisualizationState<SnapshotT, OpT> {\n  toServer: Queue<OperationAndRevision<OpT>>;\n  fromServer: Queue<OperationAndRevision<OpT>>;\n  initialSynchronizationState: SynchronizationState<OpT>;\n  clientLog: ClientLog<OpT>;\n  snapshot: SnapshotT;\n}\n\nexport interface VisualizationState<SnapshotT, OpT> {\n  server: ServerVisualizationState<SnapshotT, OpT>;\n  alice: ClientAndSocketsVisualizationState<SnapshotT, OpT>;\n  bob: ClientAndSocketsVisualizationState<SnapshotT, OpT>;\n}\n","import { Operation, OperationAndRevision } from \"./operation\";\n\nexport enum ClientEntryType {\n  USER_EDIT_IMMEDIATELY_SENT_TO_SERVER = \"USER_EDIT_IMMEDIATELY_SENT_TO_SERVER\",\n  USER_EDIT_STORED_AS_BUFFER = \"USER_EDIT_STORED_AS_BUFFER\",\n  USER_EDIT_ADDED_TO_BUFFER = \"USER_EDIT_ADDED_TO_BUFFER\",\n  RECEIVED_OWN_OPERATION = \"RECEIVED_OWN_OPERATION\",\n  RECEIVED_OWN_OPERATION_AND_SENT_BUFFER = \"RECEIVED_OWN_OPERATION_AND_SENT_BUFFER\",\n  RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED = \"RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED\",\n  RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION = \"RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION\",\n  RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER = \"RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER\",\n}\n\nexport type ClientLogEntry<OpT> =\n  | UserEditImmediatelySentToServer<OpT>\n  | UserEditStoredAsBuffer<OpT>\n  | UserEditAddedToBuffer<OpT>\n  | ReceivedOwnOperation<OpT>\n  | ReceivedOwnOperationAndSentBuffer<OpT>\n  | ReceivedServerOperationWhileSynchronized<OpT>\n  | ReceivedServerOperationWhileAwaitingOperation<OpT>\n  | ReceivedServerOperationWhileAwaitingOperationWithBuffer<OpT>;\n\nexport interface UserEditImmediatelySentToServer<OpT> {\n  type: ClientEntryType.USER_EDIT_IMMEDIATELY_SENT_TO_SERVER;\n  operation: OperationAndRevision<OpT>;\n}\n\nexport interface UserEditStoredAsBuffer<OpT> {\n  type: ClientEntryType.USER_EDIT_STORED_AS_BUFFER;\n  operation: OperationAndRevision<OpT>;\n}\n\nexport interface UserEditAddedToBuffer<OpT> {\n  type: ClientEntryType.USER_EDIT_ADDED_TO_BUFFER;\n  base: OpT;\n}\n\nexport interface ReceivedOwnOperation<OpT> {\n  type: ClientEntryType.RECEIVED_OWN_OPERATION;\n  acknowledgedOperation: OperationAndRevision<OpT>;\n}\n\nexport interface ReceivedOwnOperationAndSentBuffer<OpT> {\n  type: ClientEntryType.RECEIVED_OWN_OPERATION_AND_SENT_BUFFER;\n  acknowledgedOperation: OperationAndRevision<OpT>;\n  sentBuffer: OperationAndRevision<OpT>;\n}\n\nexport interface ReceivedServerOperationWhileSynchronized<OpT> {\n  type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED;\n  receivedOperation: OperationAndRevision<OpT>;\n}\n\nexport interface ReceivedServerOperationWhileAwaitingOperation<OpT> {\n  type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION;\n  receivedOperation: OperationAndRevision<OpT>;\n  transformedReceivedOperation: Operation<OpT>;\n  awaitedOperation: OperationAndRevision<OpT>;\n  transformedAwaitedOperation: OperationAndRevision<OpT>;\n}\n\nexport interface ReceivedServerOperationWhileAwaitingOperationWithBuffer<OpT> {\n  type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER;\n  receivedOperation: OperationAndRevision<OpT>;\n  onceTransformedReceivedOperation: Operation<OpT>;\n  twiceTransformedReceivedOperation: Operation<OpT>;\n  awaitedOperation: OperationAndRevision<OpT>;\n  transformedAwaitedOperation: OperationAndRevision<OpT>;\n  bufferOperation: Operation<OpT>;\n  transformedBufferOperation: Operation<OpT>;\n}\n","import {\n  ClientName,\n  composeOperation,\n  createNewOperation,\n  Operation,\n  OperationAndRevision,\n  transformOperation,\n} from \"./types/operation\";\nimport {\n  ClientAndSocketsVisualizationState,\n  ServerVisualizationState,\n  SynchronizationState,\n  SynchronizationStateStatus,\n  VisualizationState,\n} from \"./types/visualizationState\";\nimport { ClientEntryType, ClientLogEntry } from \"./types/clientLog\";\nimport {\n  ApplicationSpecificFunctions,\n  CompositionFunction,\n  TransformationFunction,\n} from \"./types/applicationSpecific\";\n\nfunction receiveOperationFromClient<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"transform\" | \"apply\">,\n  server: ServerVisualizationState<SnapshotT, OpT>,\n  operation: OperationAndRevision<OpT>,\n): {\n  newServerState: ServerVisualizationState<SnapshotT, OpT>;\n  operationToBroadcast: OperationAndRevision<OpT>;\n} {\n  const concurrentOperations = server.operations.slice(operation.revision);\n\n  const transformedOperation = concurrentOperations.reduce<OperationAndRevision<OpT>>(\n    (op, concurrentOp) => transformOperation(functions.transform, concurrentOp, op)[1],\n    operation,\n  );\n\n  const newServerState: ServerVisualizationState<SnapshotT, OpT> = {\n    operations: [...server.operations, transformedOperation],\n    snapshot: functions.apply(transformedOperation.base, server.snapshot),\n  };\n  return { operationToBroadcast: transformedOperation, newServerState };\n}\n\nexport interface Lens<S, A> {\n  get: (s: S) => A;\n  set: (s: S, a: A) => S;\n}\n\nexport const makeAliceLens = <SnapshotT, OpT>(): Lens<\n  VisualizationState<SnapshotT, OpT>,\n  ClientAndSocketsVisualizationState<SnapshotT, OpT>\n> => ({\n  get: (globalState) => globalState.alice,\n  set: (globalState, aliceState) => ({ ...globalState, alice: aliceState }),\n});\n\nexport const makeBobLens = <SnapshotT, OpT>(): Lens<\n  VisualizationState<SnapshotT, OpT>,\n  ClientAndSocketsVisualizationState<SnapshotT, OpT>\n> => ({\n  get: (globalState) => globalState.bob,\n  set: (globalState, bobState) => ({ ...globalState, bob: bobState }),\n});\n\nfunction processClientUserOperation<OpT>(\n  compositionFunction: CompositionFunction<OpT>,\n  synchronizationState: SynchronizationState<OpT>,\n  baseOperation: OpT,\n  clientName: ClientName,\n): {\n  newSynchronizationState: SynchronizationState<OpT>;\n  operationsToSendToServer: OperationAndRevision<OpT>[];\n  newClientLogEntry: ClientLogEntry<OpT>;\n} {\n  switch (synchronizationState.status) {\n    case SynchronizationStateStatus.SYNCHRONIZED: {\n      const revision = synchronizationState.serverRevision;\n      const operationToSendToServer: OperationAndRevision<OpT> = {\n        ...createNewOperation(baseOperation, clientName),\n        revision,\n      };\n      return {\n        newSynchronizationState: {\n          status: SynchronizationStateStatus.AWAITING_OPERATION,\n          awaitedOperation: operationToSendToServer,\n        },\n        operationsToSendToServer: [operationToSendToServer],\n        newClientLogEntry: {\n          type: ClientEntryType.USER_EDIT_IMMEDIATELY_SENT_TO_SERVER,\n          operation: operationToSendToServer,\n        },\n      };\n    }\n    case SynchronizationStateStatus.AWAITING_OPERATION: {\n      const revision = synchronizationState.awaitedOperation.revision + 1;\n      let buffer: OperationAndRevision<OpT> = {\n        ...createNewOperation(baseOperation, clientName),\n        revision,\n      };\n      return {\n        newSynchronizationState: {\n          status: SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER,\n          awaitedOperation: synchronizationState.awaitedOperation,\n          buffer,\n        },\n        operationsToSendToServer: [],\n        newClientLogEntry: {\n          type: ClientEntryType.USER_EDIT_STORED_AS_BUFFER,\n          operation: buffer,\n        },\n      };\n    }\n    case SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER: {\n      return {\n        newSynchronizationState: {\n          status: SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER,\n          awaitedOperation: synchronizationState.awaitedOperation,\n          buffer: composeOperation(compositionFunction, synchronizationState.buffer, baseOperation),\n        },\n        operationsToSendToServer: [],\n        newClientLogEntry: {\n          type: ClientEntryType.USER_EDIT_ADDED_TO_BUFFER,\n          base: baseOperation,\n        },\n      };\n    }\n  }\n}\n\nfunction getLatestSynchronizationState<SnapshotT, OpT>({\n  clientLog,\n  initialSynchronizationState,\n}: ClientAndSocketsVisualizationState<SnapshotT, OpT>) {\n  return clientLog.length > 0 ? clientLog[0].newState : initialSynchronizationState;\n}\n\nfunction clientUserOperation<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"compose\" | \"apply\">,\n  clientState: ClientAndSocketsVisualizationState<SnapshotT, OpT>,\n  baseOperation: OpT,\n  clientName: ClientName,\n): ClientAndSocketsVisualizationState<SnapshotT, OpT> {\n  const { initialSynchronizationState, clientLog, toServer, fromServer, snapshot } = clientState;\n  const {\n    newSynchronizationState,\n    operationsToSendToServer,\n    newClientLogEntry,\n  } = processClientUserOperation(\n    functions.compose,\n    getLatestSynchronizationState(clientState),\n    baseOperation,\n    clientName,\n  );\n\n  return {\n    clientLog: [{ entry: newClientLogEntry, newState: newSynchronizationState }, ...clientLog],\n    toServer: [...toServer, ...operationsToSendToServer],\n    fromServer,\n    snapshot: functions.apply(baseOperation, snapshot),\n    initialSynchronizationState,\n  };\n}\n\nexport function onClientOperation<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"compose\" | \"apply\">,\n  visualizationState: VisualizationState<SnapshotT, OpT>,\n  clientLens: Lens<\n    VisualizationState<SnapshotT, OpT>,\n    ClientAndSocketsVisualizationState<SnapshotT, OpT>\n  >,\n  clientName: ClientName,\n  baseOperation: OpT,\n): VisualizationState<SnapshotT, OpT> {\n  const newClientState = clientUserOperation(\n    functions,\n    clientLens.get(visualizationState),\n    baseOperation,\n    clientName,\n  );\n  return clientLens.set(visualizationState, newClientState);\n}\n\nfunction sendOperationToClient<SnapshotT, OpT>(\n  client: ClientAndSocketsVisualizationState<SnapshotT, OpT>,\n  operation: OperationAndRevision<OpT>,\n): ClientAndSocketsVisualizationState<SnapshotT, OpT> {\n  return {\n    ...client,\n    fromServer: [...client.fromServer, operation],\n  };\n}\n\nexport function onServerReceive<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"transform\" | \"apply\">,\n  visualizationState: VisualizationState<SnapshotT, OpT>,\n  clientLens: Lens<\n    VisualizationState<SnapshotT, OpT>,\n    ClientAndSocketsVisualizationState<SnapshotT, OpT>\n  >,\n): VisualizationState<SnapshotT, OpT> {\n  const clientState = clientLens.get(visualizationState);\n  const [operation, ...remainingOperations] = clientState.toServer;\n  const newClientState = { ...clientState, toServer: remainingOperations };\n  const nextVisualizationState = clientLens.set(visualizationState, newClientState);\n  const { newServerState, operationToBroadcast } = receiveOperationFromClient(\n    functions,\n    nextVisualizationState.server,\n    operation,\n  );\n  return {\n    server: newServerState,\n    alice: sendOperationToClient(nextVisualizationState.alice, operationToBroadcast),\n    bob: sendOperationToClient(nextVisualizationState.bob, operationToBroadcast),\n  };\n}\n\nfunction processOperationFromServer<OpT>(\n  transformationFunction: TransformationFunction<OpT>,\n  synchronizationState: SynchronizationState<OpT>,\n  receivedOperation: OperationAndRevision<OpT>,\n): {\n  newSynchronizationState: SynchronizationState<OpT>;\n  operationToSendToServer: OperationAndRevision<OpT> | undefined;\n  transformedReceivedOperationToApply: Operation<OpT> | undefined;\n  newClientLogEntry: ClientLogEntry<OpT>;\n} {\n  switch (synchronizationState.status) {\n    case SynchronizationStateStatus.SYNCHRONIZED: {\n      const newSynchronizationState: SynchronizationState<OpT> = {\n        status: SynchronizationStateStatus.SYNCHRONIZED,\n        serverRevision: synchronizationState.serverRevision + 1,\n      };\n      return {\n        newSynchronizationState,\n        operationToSendToServer: undefined,\n        transformedReceivedOperationToApply: receivedOperation,\n        newClientLogEntry: {\n          type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED,\n          receivedOperation,\n        },\n      };\n    }\n    case SynchronizationStateStatus.AWAITING_OPERATION: {\n      const { awaitedOperation } = synchronizationState;\n      if (receivedOperation.meta.id === awaitedOperation.meta.id) {\n        const newSynchronizationState: SynchronizationState<OpT> = {\n          status: SynchronizationStateStatus.SYNCHRONIZED,\n          serverRevision: awaitedOperation.revision + 1,\n        };\n        return {\n          newSynchronizationState,\n          operationToSendToServer: undefined,\n          transformedReceivedOperationToApply: undefined,\n          newClientLogEntry: {\n            type: ClientEntryType.RECEIVED_OWN_OPERATION,\n            acknowledgedOperation: receivedOperation,\n          },\n        };\n      } else {\n        const [transformedReceivedOperation, transformedAwaitedOperation] = transformOperation(\n          transformationFunction,\n          receivedOperation,\n          awaitedOperation,\n        );\n        const newSynchronizationState: SynchronizationState<OpT> = {\n          status: SynchronizationStateStatus.AWAITING_OPERATION,\n          awaitedOperation: transformedAwaitedOperation,\n        };\n        return {\n          newSynchronizationState,\n          operationToSendToServer: undefined,\n          transformedReceivedOperationToApply: transformedReceivedOperation,\n          newClientLogEntry: {\n            type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION,\n            receivedOperation,\n            transformedReceivedOperation: transformedReceivedOperation,\n            awaitedOperation: awaitedOperation,\n            transformedAwaitedOperation: transformedAwaitedOperation,\n          },\n        };\n      }\n    }\n    case SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER: {\n      const { awaitedOperation, buffer } = synchronizationState;\n      if (receivedOperation.meta.id === awaitedOperation.meta.id) {\n        const newSynchronizationState: SynchronizationState<OpT> = {\n          status: SynchronizationStateStatus.AWAITING_OPERATION,\n          awaitedOperation: synchronizationState.buffer,\n        };\n        return {\n          newSynchronizationState,\n          operationToSendToServer: synchronizationState.buffer,\n          transformedReceivedOperationToApply: undefined,\n          newClientLogEntry: {\n            type: ClientEntryType.RECEIVED_OWN_OPERATION_AND_SENT_BUFFER,\n            acknowledgedOperation: receivedOperation,\n            sentBuffer: synchronizationState.buffer,\n          },\n        };\n      } else {\n        const [onceTransformedReceivedOperation, transformedAwaitedOperation] = transformOperation(\n          transformationFunction,\n          receivedOperation,\n          awaitedOperation,\n        );\n        const [twiceTransformedReceivedOperation, transformedBuffer] = transformOperation(\n          transformationFunction,\n          onceTransformedReceivedOperation,\n          buffer,\n        );\n        const newSynchronizationState: SynchronizationState<OpT> = {\n          status: SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER,\n          awaitedOperation: transformedAwaitedOperation,\n          buffer: transformedBuffer,\n        };\n        return {\n          newSynchronizationState,\n          operationToSendToServer: undefined,\n          transformedReceivedOperationToApply: twiceTransformedReceivedOperation,\n          newClientLogEntry: {\n            type: ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER,\n            receivedOperation,\n            onceTransformedReceivedOperation,\n            twiceTransformedReceivedOperation,\n            awaitedOperation,\n            transformedAwaitedOperation,\n            bufferOperation: buffer,\n            transformedBufferOperation: transformedBuffer,\n          },\n        };\n      }\n    }\n  }\n}\n\nfunction clientReceiveOperation<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"transform\" | \"apply\">,\n  clientState: ClientAndSocketsVisualizationState<SnapshotT, OpT>,\n): {\n  newClientState: ClientAndSocketsVisualizationState<SnapshotT, OpT>;\n  transformedReceivedOperationToApply: Operation<OpT> | undefined;\n} {\n  const { initialSynchronizationState, clientLog, fromServer, toServer, snapshot } = clientState;\n  const [operation, ...remainingOperations] = fromServer;\n  const {\n    newSynchronizationState,\n    operationToSendToServer,\n    transformedReceivedOperationToApply,\n    newClientLogEntry,\n  } = processOperationFromServer(\n    functions.transform,\n    getLatestSynchronizationState(clientState),\n    operation,\n  );\n  const newClientState: ClientAndSocketsVisualizationState<SnapshotT, OpT> = {\n    snapshot:\n      transformedReceivedOperationToApply === undefined\n        ? snapshot\n        : functions.apply(transformedReceivedOperationToApply.base, snapshot),\n    toServer:\n      operationToSendToServer === undefined ? toServer : [...toServer, operationToSendToServer],\n    fromServer: remainingOperations,\n    clientLog: [{ entry: newClientLogEntry, newState: newSynchronizationState }, ...clientLog],\n    initialSynchronizationState,\n  };\n  return { newClientState, transformedReceivedOperationToApply };\n}\n\nexport function onClientReceive<SnapshotT, OpT>(\n  functions: Pick<ApplicationSpecificFunctions<SnapshotT, OpT>, \"transform\" | \"apply\">,\n  visualizationState: VisualizationState<SnapshotT, OpT>,\n  clientLens: Lens<\n    VisualizationState<SnapshotT, OpT>,\n    ClientAndSocketsVisualizationState<SnapshotT, OpT>\n  >,\n): {\n  newState: VisualizationState<SnapshotT, OpT>;\n  transformedReceivedOperationToApply: Operation<OpT> | undefined;\n} {\n  const { newClientState, transformedReceivedOperationToApply } = clientReceiveOperation(\n    functions,\n    clientLens.get(visualizationState),\n  );\n  const newState = clientLens.set(visualizationState, newClientState);\n  return { newState, transformedReceivedOperationToApply };\n}\n","import React, { FunctionComponent, useCallback, useEffect, useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport clsx from \"clsx\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { getClientColor } from \"./sharedStyles\";\nimport { Operation, OperationWithoutPayload } from \"./types/operation\";\nimport { useOperationHoverState } from \"./OperationHoverProvider\";\nimport { ApplicationSpecificOperationComponents } from \"./types/applicationSpecific\";\n\ninterface OperationWithOptionalRevision<OpT> extends Operation<OpT> {\n  revision?: number;\n}\n\nconst renderOperation = <OpT extends unknown>(\n  renderOperation: (operation: OpT) => React.ReactNode,\n  operation: OperationWithOptionalRevision<OpT>,\n): JSX.Element => (\n  <>\n    {operation.revision !== undefined ? (\n      <p style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Revision: {operation.revision}</p>\n    ) : (\n      <></>\n    )}\n    <div>{renderOperation(operation.base)}</div>\n  </>\n);\n\nconst useOperationStyles = createUseStyles({\n  operation: {\n    display: \"inline-block\",\n    width: \"20px\",\n    height: \"20px\",\n    borderRadius: \"10px\",\n  },\n  tooltip: {\n    // specificity hack\n    \"&$tooltip\": {\n      fontSize: \"13px\",\n    },\n  },\n});\n\nexport type OperationTooltipPlacement = \"top\" | \"bottom\" | \"left\" | \"right\";\n\ninterface OperationProps<OpT>\n  extends Omit<React.HTMLAttributes<HTMLSpanElement>, \"onMouseEnter\" | \"onMouseLeave\"> {\n  operation: OperationWithOptionalRevision<OpT>;\n  tooltipPlacement?: OperationTooltipPlacement;\n}\n\nconst isOneArrayPrefixOfTheOther = (xs: string[], ys: string[]) => {\n  const l = Math.min(xs.length, ys.length);\n  for (let i = 0; i < l; i++) {\n    if (xs[i] !== ys[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst isRelated = (a: OperationWithoutPayload, b: OperationWithoutPayload): boolean =>\n  a.meta.id === b.meta.id;\n\nconst transformationPlural = (count: number): string => {\n  switch (count) {\n    case 1:\n      return \"transformation\";\n    case 2:\n      return \"two transformations\";\n    case 3:\n      return \"three transformations\";\n    case 4:\n      return \"four transformations\";\n    case 5:\n      return \"five transformations\";\n    case 6:\n      return \"six transformations\";\n    case 7:\n      return \"seven transformations\";\n    case 8:\n      return \"eight transformations\";\n    case 9:\n      return \"nine transformations\";\n    default:\n      return \"multiple transformations\";\n  }\n};\n\nconst renderRelatedOperation = <OpT extends unknown>(\n  operation: Operation<OpT>,\n  relatedOperation: OperationWithoutPayload,\n): NonNullable<React.ReactNode> => {\n  if (\n    isOneArrayPrefixOfTheOther(operation.transformedAgainst, relatedOperation.transformedAgainst)\n  ) {\n    const transformedAgainstDifference =\n      operation.transformedAgainst.length - relatedOperation.transformedAgainst.length;\n    if (transformedAgainstDifference < 0) {\n      return `before ${transformationPlural(-transformedAgainstDifference)}`;\n    }\n    if (transformedAgainstDifference > 0) {\n      return `after ${transformationPlural(transformedAgainstDifference)}`;\n    }\n    return \"identical\";\n  }\n  return \"differently transformed\";\n};\n\nenum SelfOpenStatus {\n  Closed = \"CLOSED\",\n  Closing = \"CLOSING\",\n  Open = \"OPEN\",\n}\n\nexport type OperationVisualizationComp<OpT> = FunctionComponent<OperationProps<OpT>>;\n\nexport const makeOperationVisualization = <OpT extends unknown>(\n  applicationSpecific: ApplicationSpecificOperationComponents<OpT>,\n): OperationVisualizationComp<OpT> => (props) => {\n  const classes = useOperationStyles();\n  const { className, style, operation, tooltipPlacement, ...otherProps } = props;\n\n  const [tooltipContent, setTooltipContent] = useState<NonNullable<React.ReactNode>>(\"\");\n  const [selfOpenStatus, setSelfOpenStatus] = useState<SelfOpenStatus>(SelfOpenStatus.Closed);\n  const [hoveredOperation, setHoveredOperation] = useOperationHoverState();\n\n  useEffect(() => {\n    if (\n      selfOpenStatus === SelfOpenStatus.Closed &&\n      hoveredOperation !== undefined &&\n      isRelated(hoveredOperation, operation)\n    ) {\n      setTooltipContent(renderRelatedOperation(operation, hoveredOperation));\n    } else if (selfOpenStatus === SelfOpenStatus.Closing && hoveredOperation === undefined) {\n      setSelfOpenStatus(SelfOpenStatus.Closed);\n    }\n  }, [selfOpenStatus, hoveredOperation, operation]);\n\n  const onOpen = useCallback(() => {\n    setSelfOpenStatus(SelfOpenStatus.Open);\n    setTooltipContent(renderOperation(applicationSpecific.renderOperation, operation));\n    setHoveredOperation(operation);\n  }, [operation, setHoveredOperation]);\n\n  const onClose = useCallback(() => {\n    setSelfOpenStatus(hoveredOperation ? SelfOpenStatus.Closing : SelfOpenStatus.Closed);\n    setHoveredOperation(undefined);\n  }, [hoveredOperation, setHoveredOperation]);\n\n  const isRelatedOperationHovered =\n    hoveredOperation !== undefined && isRelated(operation, hoveredOperation);\n\n  return (\n    <Tooltip\n      key={operation.meta.id}\n      arrow={true}\n      classes={{ tooltip: classes.tooltip }}\n      title={tooltipContent}\n      open={selfOpenStatus === SelfOpenStatus.Open || isRelatedOperationHovered}\n      placement={tooltipPlacement ?? \"bottom\"}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      <span\n        key={operation.meta.id}\n        className={clsx(classes.operation, props.className)}\n        style={{\n          background: getClientColor(operation.meta.author),\n          ...style,\n        }}\n        {...otherProps}\n      />\n    </Tooltip>\n  );\n};\n","import { createUseStyles } from \"react-jss\";\nimport { ClientName } from \"./types/operation\";\n\nexport const useSharedStyles = createUseStyles({\n  site: {\n    background: \"#eee\",\n    padding: \"20px\",\n    margin: \"0 15px\",\n    \"& h2\": {\n      margin: \"0 0 16px\",\n      \"& svg\": {\n        margin: \"0 12px 0 4px\",\n        verticalAlign: \"bottom\",\n      },\n    },\n  },\n});\n\nexport const getClientColor = (clientName: ClientName): string => {\n  switch (clientName) {\n    case ClientName.Alice:\n      return \"#0074D9\";\n    case ClientName.Bob:\n      return \"#e2451e\";\n  }\n};\n","import React, { CSSProperties, FunctionComponent } from \"react\";\nimport { Operation } from \"./types/operation\";\nimport { getClientColor } from \"./sharedStyles\";\nimport { OperationTooltipPlacement, OperationVisualizationComp } from \"./OperationVisualization\";\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const SvgArrow: FunctionComponent<{\n  start: Point;\n  end: Point;\n  shaftWidth: number;\n  tipLength: number;\n  tipWidth: number;\n  color: string;\n}> = ({ start, end, shaftWidth, tipLength, tipWidth, color }) => {\n  const diffX = end.x - start.x;\n  const diffY = end.y - start.y;\n  const length = Math.sqrt(diffX * diffX + diffY * diffY);\n  const tipToShaftLength = (tipWidth - shaftWidth) / 2;\n  const shaftLength = length - tipLength;\n\n  return (\n    <path\n      fill={color}\n      transform={`matrix(${diffX / length}, ${diffY / length}, ${-diffY / length}, ${\n        diffX / length\n      }, ${start.x}, ${start.y})`}\n      d={`m ${length},0 -${tipLength},-${\n        tipWidth / 2\n      } 0,${tipToShaftLength} -${shaftLength},0 0,${shaftWidth} ${shaftLength},0 0,${tipToShaftLength} z`}\n    />\n  );\n};\n\nconst operationArrowStyle = {\n  shaftWidth: 10,\n  tipLength: 24,\n  tipWidth: 20,\n};\n\nconst interpolate = (lambda: number, start: Point, end: Point): Point => ({\n  x: (1 - lambda) * start.x + lambda * end.x,\n  y: (1 - lambda) * start.y + lambda * end.y,\n});\n\nexport interface ArrowDiagramArrowProps<OpT> {\n  operation: Operation<OpT>;\n  start: Point;\n  end: Point;\n  tooltipPlacement: OperationTooltipPlacement;\n}\n\ninterface ArrowDiagramProps<OpT> {\n  width: number;\n  height: number;\n  arrows: ArrowDiagramArrowProps<OpT>[];\n}\n\ntype ArrowDiagram<OpT> = FunctionComponent<ArrowDiagramProps<OpT>>;\n\nexport const makeArrowDiagram = <OpT extends unknown>(\n  OperationVisualization: OperationVisualizationComp<OpT>,\n): ArrowDiagram<OpT> => ({ width, height, arrows }) => {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0 auto\",\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={width}\n        height={height}\n        style={{ position: \"absolute\", opacity: \"0.2\" }}\n      >\n        {arrows.map(({ operation, start, end }, i) => (\n          <SvgArrow\n            key={i}\n            start={interpolate(0.1, start, end)}\n            end={interpolate(0.95, start, end)}\n            color={getClientColor(operation.meta.author)}\n            {...operationArrowStyle}\n          />\n        ))}\n      </svg>\n      {arrows.map(({ operation, start, end, tooltipPlacement }, i) => {\n        const centerPoint = interpolate(0.45, start, end);\n        const style: CSSProperties = {\n          position: \"absolute\",\n          left: `${centerPoint.x - 10}px`,\n          top: `${centerPoint.y - 10}px`,\n        };\n        return (\n          <OperationVisualization\n            key={i}\n            operation={operation}\n            tooltipPlacement={tooltipPlacement}\n            style={style}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { SynchronizationState, SynchronizationStateStatus } from \"./types/visualizationState\";\nimport { createUseStyles } from \"react-jss\";\nimport { OperationVisualizationComp } from \"./OperationVisualization\";\n\nconst useStyles = createUseStyles({\n  synchronizationState: {\n    lineHeight: \"24px\",\n    background: \"#eee\",\n    padding: \"12px 20px\",\n  },\n  synchronizationStateOperation: {\n    margin: \"0 2px\",\n    verticalAlign: \"-4px\",\n  },\n  stateLabel: {\n    color: \"#666\",\n  },\n});\n\ntype SynchronizationStateVisualization<OpT> = FunctionComponent<{\n  synchronizationState: SynchronizationState<OpT>;\n}>;\n\nexport const makeSynchronizationStateVisualization = <OpT extends unknown>(\n  OperationVisualization: OperationVisualizationComp<OpT>,\n): SynchronizationStateVisualization<OpT> => ({ synchronizationState }) => {\n  const clientClasses = useStyles();\n\n  const stateLabel = <span className={clientClasses.stateLabel}>State:</span>;\n\n  switch (synchronizationState.status) {\n    case SynchronizationStateStatus.SYNCHRONIZED:\n      return (\n        <p className={clientClasses.synchronizationState}>\n          {stateLabel} Synchronized at server revision {synchronizationState.serverRevision}\n        </p>\n      );\n    case SynchronizationStateStatus.AWAITING_OPERATION:\n      return (\n        <p className={clientClasses.synchronizationState}>\n          {stateLabel} Awaiting operation{\" \"}\n          <OperationVisualization\n            operation={synchronizationState.awaitedOperation}\n            className={clientClasses.synchronizationStateOperation}\n          />\n        </p>\n      );\n    case SynchronizationStateStatus.AWAITING_OPERATION_WITH_BUFFER:\n      return (\n        <p className={clientClasses.synchronizationState}>\n          {stateLabel} Awaiting operation{\" \"}\n          <OperationVisualization\n            operation={synchronizationState.awaitedOperation}\n            className={clientClasses.synchronizationStateOperation}\n          />{\" \"}\n          with buffer{\" \"}\n          <OperationVisualization\n            operation={synchronizationState.buffer}\n            className={clientClasses.synchronizationStateOperation}\n          />\n        </p>\n      );\n  }\n};\n","import React, {\n  createContext,\n  Dispatch,\n  FunctionComponent,\n  SetStateAction,\n  useContext,\n  useState,\n} from \"react\";\nimport { OperationWithoutPayload } from \"./types/operation\";\n\ntype StateHandle<S> = [S, Dispatch<SetStateAction<S>>];\n\ntype OperationHoverStateHandle = StateHandle<OperationWithoutPayload | undefined>;\n\nconst OperationHoverContext = createContext<StateHandle<OperationWithoutPayload | undefined>>([\n  undefined,\n  () => {\n    throw new Error(\"you need to wrap this with <OperationHoverProvider />\");\n  },\n]);\n\nexport const OperationHoverProvider: FunctionComponent = (props) => {\n  const stateHandle = useState<OperationWithoutPayload | undefined>(undefined);\n\n  return (\n    <OperationHoverContext.Provider value={stateHandle}>\n      {props.children}\n    </OperationHoverContext.Provider>\n  );\n};\n\nexport const useOperationHoverState = (): OperationHoverStateHandle =>\n  useContext(OperationHoverContext);\n","import { ClientAndSocketsVisualizationState, Queue } from \"./types/visualizationState\";\nimport { createUseStyles } from \"react-jss\";\nimport React, {\n  CSSProperties,\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { getClientColor, useSharedStyles } from \"./sharedStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Computer from \"@material-ui/icons/Computer\";\nimport Tablet from \"@material-ui/icons/Tablet\";\nimport { ClientName, Operation, OperationAndRevision } from \"./types/operation\";\nimport { useIsInitialRender } from \"./hooks/useIsInitialRender\";\nimport { makeClientLogVisualization } from \"./ClientLogVisualization\";\nimport { ApplicationSpecificComponents, EditorHandle } from \"./types/applicationSpecific\";\nimport { makeOperationVisualization, OperationVisualizationComp } from \"./OperationVisualization\";\n\nconst useSocketOperationStyles = createUseStyles({\n  operationInSocket: {\n    position: \"absolute\",\n    transform: \"translate(0, -50%)\",\n    transitionProperty: \"top\",\n    transitionDuration: \"0.5s\",\n  },\n});\n\ninterface OperationInSocketProps<OpT> {\n  operation: OperationAndRevision<OpT>;\n  initialPositionTop?: string;\n  positionTop?: string;\n  disableHover?: boolean;\n  onTransitionEnd?: () => void;\n}\n\nconst makeOperationInSocket = <OpT extends unknown>(\n  OperationVisualization: OperationVisualizationComp<OpT>,\n): FunctionComponent<OperationInSocketProps<OpT>> => (props) => {\n  const classes = useSocketOperationStyles();\n\n  const isInitialRender = useIsInitialRender();\n\n  const positionStyle: CSSProperties =\n    isInitialRender && props.initialPositionTop !== undefined\n      ? { top: props.initialPositionTop }\n      : props.positionTop !== undefined\n      ? { top: props.positionTop }\n      : {};\n\n  const hoverStyle: CSSProperties = props.disableHover ? { pointerEvents: \"none\" } : {};\n\n  return (\n    <OperationVisualization\n      operation={props.operation}\n      className={classes.operationInSocket}\n      style={{ ...positionStyle, ...hoverStyle }}\n      onTransitionEnd={props.onTransitionEnd}\n    />\n  );\n};\n\nconst useSocketStyles = createUseStyles({\n  socket: {\n    position: \"relative\",\n    margin: \"0 40px\",\n    height: \"100%\",\n  },\n  line: {\n    position: \"absolute\",\n    left: \"-1px\",\n    height: \"100%\",\n    borderLeft: \"2px dashed #eee\",\n    zIndex: \"-1\",\n  },\n  operations: {\n    position: \"relative\",\n    height: \"100%\",\n    width: \"20px\",\n    left: \"-10px\",\n    overflowY: \"hidden\",\n    overflowX: \"visible\",\n  },\n  receiveButton: {\n    // specificity hack\n    \"&$receiveButton\": {\n      backgroundColor: \"#222\",\n      color: \"#FFDC00\",\n      position: \"absolute\",\n      padding: \"2px\",\n      transform: \"translate(-50%, -50%)\",\n      zIndex: \"20\",\n      \"&:hover\": {\n        backgroundColor: \"#444\",\n      },\n      \"&[class*=Mui-disabled]\": {\n        backgroundColor: \"#ccc\",\n        color: \"#eee\",\n      },\n    },\n  },\n});\n\nenum SocketDirection {\n  UP,\n  DOWN,\n}\n\ninterface SocketProps<OpT> {\n  direction: SocketDirection;\n  tooltip: string;\n  queue: Queue<OperationAndRevision<OpT>>;\n  onReceiveClick: () => void;\n}\n\nconst makeSocketVisualization = <OpT extends unknown>(\n  OperationVisualization: OperationVisualizationComp<OpT>,\n): FunctionComponent<SocketProps<OpT>> => {\n  const OperationInSocket = makeOperationInSocket(OperationVisualization);\n\n  return ({ queue, onReceiveClick, direction, tooltip }) => {\n    const socketClasses = useSocketStyles();\n\n    const queueEmpty = queue.length === 0;\n\n    const [delayedQueue, setDelayedQueue] = useState<typeof queue>([]);\n\n    useEffect(() => {\n      setDelayedQueue((delayedQueue) => [\n        ...delayedQueue.filter((operation) => !queue.includes(operation)),\n        ...queue,\n      ]);\n    }, [queue]);\n\n    const positionInverter = direction === SocketDirection.DOWN ? \"100% -\" : \"\";\n\n    const receiveButton = (\n      <IconButton\n        className={socketClasses.receiveButton}\n        onClick={onReceiveClick}\n        disabled={queueEmpty}\n        style={{ top: `calc(${positionInverter} 0%)` }}\n      >\n        {direction === SocketDirection.UP ? <ArrowUpward /> : <ArrowDownward />}\n      </IconButton>\n    );\n\n    const leavingOps = delayedQueue.filter((operation) => !queue.includes(operation));\n\n    return (\n      <div className={socketClasses.socket}>\n        <Tooltip title={queueEmpty ? \"\" : tooltip}>{receiveButton}</Tooltip>\n        <div className={socketClasses.line} />\n        <div className={socketClasses.operations}>\n          {[\n            ...leavingOps.map((operation) => (\n              <OperationInSocket\n                key={operation.meta.id}\n                operation={operation}\n                positionTop={`calc(${positionInverter} 0px)`}\n                disableHover={\n                  true /* prevent accidentally triggering tooltip when operation moves */\n                }\n                onTransitionEnd={() =>\n                  setDelayedQueue((delayedQueue) => delayedQueue.filter((o) => o !== operation))\n                }\n              />\n            )),\n            ...queue.map((operation, i) => (\n              <OperationInSocket\n                key={operation.meta.id}\n                operation={operation}\n                positionTop={`calc(${positionInverter} 100% / ${queue.length + 1} * ${i + 1})`}\n                initialPositionTop={`calc(${positionInverter} (100% + 20px))`}\n              />\n            )),\n          ]}\n        </div>\n      </div>\n    );\n  };\n};\n\nconst useClientStyles = createUseStyles({\n  client: {\n    width: \"460px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    zIndex: \"10\",\n    paddingBottom: \"12px\",\n    borderBottom: \"2px solid #fff\",\n  },\n  sockets: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    height: \"150px\",\n  },\n});\n\nexport interface ClientAndSocketsVisualizationProps<SnapshotT, OpT> {\n  clientName: ClientName;\n  className: string;\n  state: ClientAndSocketsVisualizationState<SnapshotT, OpT>;\n  onClientOperation: (operation: OpT) => void;\n  onServerReceiveClick: () => void;\n  onClientReceiveClick: () => Operation<OpT> | undefined;\n}\n\nexport const getClientIcon = (clientName: ClientName): JSX.Element => {\n  switch (clientName) {\n    case ClientName.Alice:\n      return <Computer />;\n    case ClientName.Bob:\n      return <Tablet />;\n  }\n};\n\nexport const makeClientAndSocketsVisualization = <SnapshotT extends unknown, OpT extends unknown>(\n  applicationSpecific: ApplicationSpecificComponents<SnapshotT, OpT>,\n): FunctionComponent<ClientAndSocketsVisualizationProps<SnapshotT, OpT>> => {\n  const OperationVisualization = makeOperationVisualization(applicationSpecific);\n  const SocketVisualization = makeSocketVisualization(OperationVisualization);\n  const ClientLogVisualization = makeClientLogVisualization(applicationSpecific);\n  const { EditorComponent } = applicationSpecific;\n\n  return ({\n    onClientOperation,\n    onClientReceiveClick,\n    onServerReceiveClick,\n    state,\n    clientName,\n    className,\n  }) => {\n    const clientClasses = useClientStyles();\n    const sharedClasses = useSharedStyles();\n\n    const editorHandleRef = useRef<EditorHandle<OpT>>(null);\n\n    const onClientReceive = useCallback(() => {\n      const operationToApply = onClientReceiveClick();\n      if (operationToApply !== undefined) {\n        editorHandleRef.current?.applyOperation(operationToApply.base);\n      }\n    }, [onClientReceiveClick]);\n\n    return (\n      <div className={className}>\n        <div className={clientClasses.sockets}>\n          <SocketVisualization\n            direction={SocketDirection.UP}\n            tooltip=\"Receive next operation from client\"\n            queue={state.toServer}\n            onReceiveClick={onServerReceiveClick}\n          />\n          <SocketVisualization\n            direction={SocketDirection.DOWN}\n            tooltip=\"Receive next operation from server\"\n            queue={state.fromServer}\n            onReceiveClick={onClientReceive}\n          />\n        </div>\n        <div className={clsx(sharedClasses.site, clientClasses.client)}>\n          <h2 style={{ color: getClientColor(clientName) }}>\n            {getClientIcon(clientName)}\n            {clientName}\n          </h2>\n          <EditorComponent\n            snapshot={state.snapshot}\n            onUserChange={onClientOperation}\n            ref={editorHandleRef}\n          />\n        </div>\n        <ClientLogVisualization\n          clientLog={state.clientLog}\n          initialSynchronizationState={state.initialSynchronizationState}\n        />\n      </div>\n    );\n  };\n};\n","import React, { FunctionComponent, useCallback, useState } from \"react\";\nimport {\n  ClientEntryType,\n  ClientLogEntry,\n  ReceivedOwnOperation,\n  ReceivedOwnOperationAndSentBuffer,\n  ReceivedServerOperationWhileAwaitingOperation,\n  ReceivedServerOperationWhileAwaitingOperationWithBuffer,\n  ReceivedServerOperationWhileSynchronized,\n  UserEditAddedToBuffer,\n  UserEditImmediatelySentToServer,\n  UserEditStoredAsBuffer,\n} from \"./types/clientLog\";\nimport { createUseStyles } from \"react-jss\";\nimport { ArrowDiagramArrowProps, makeArrowDiagram, SvgArrow } from \"./ArrowDiagram\";\nimport { ClientLog, ClientLogItem, SynchronizationState } from \"./types/visualizationState\";\nimport { makeSynchronizationStateVisualization } from \"./SynchronizationStateVisualization\";\nimport { ApplicationSpecificOperationComponents } from \"./types/applicationSpecific\";\nimport { makeOperationVisualization } from \"./OperationVisualization\";\n\nconst useStyles = createUseStyles({\n  clientLog: {\n    margin: \"0 15px 20px\",\n    lineHeight: \"24px\",\n  },\n  clientLogItem: {\n    transition: \"margin 0.5s ease, height 0.5s ease\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    \"& > div\": {\n      position: \"absolute\",\n      left: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n    },\n  },\n  clientLogEntry: {\n    padding: \"12px 20px 12px 40px\",\n  },\n  inlineOperation: {\n    margin: \"0 2px\",\n    verticalAlign: \"-4px\",\n  },\n});\n\nconst makeClientLogItemVisualization = <OpT extends unknown>(\n  applicationSpecific: ApplicationSpecificOperationComponents<OpT>,\n): FunctionComponent<ClientLogItem<OpT>> => {\n  const OperationVisualization = makeOperationVisualization(applicationSpecific);\n  const SynchronizationStateVisualization = makeSynchronizationStateVisualization(\n    OperationVisualization,\n  );\n  const ArrowDiagram = makeArrowDiagram(OperationVisualization);\n\n  const UserEditImmediatelySentToServerVisualization: FunctionComponent<UserEditImmediatelySentToServer<\n    OpT\n  >> = (logEntry) => {\n    const classes = useStyles();\n\n    return (\n      <p>\n        User edit{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.operation}\n        />{\" \"}\n        was sent to the server.\n      </p>\n    );\n  };\n\n  const UserEditStoredAsBufferVisualization: FunctionComponent<UserEditStoredAsBuffer<OpT>> = (\n    logEntry,\n  ) => {\n    const classes = useStyles();\n\n    return (\n      <p>\n        User edit{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.operation}\n        />{\" \"}\n        was stored in buffer.\n      </p>\n    );\n  };\n\n  const UserEditAddedToBufferVisualization: FunctionComponent<UserEditAddedToBuffer<OpT>> = (\n    logEntry,\n  ) => {\n    // TODO: render user edit\n    return <p>Added user edit to buffer.</p>;\n  };\n\n  const ReceivedOwnOperationVisualization: FunctionComponent<ReceivedOwnOperation<OpT>> = (\n    logEntry,\n  ) => {\n    const classes = useStyles();\n\n    return (\n      <p>\n        Received acknowledgment of own operation{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.acknowledgedOperation}\n        />\n        .\n      </p>\n    );\n  };\n\n  const ReceivedOwnOperationAndSentBufferVisualization: FunctionComponent<ReceivedOwnOperationAndSentBuffer<\n    OpT\n  >> = (logEntry) => {\n    const classes = useStyles();\n\n    return (\n      <p>\n        Received acknowledgment of own operation{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.acknowledgedOperation}\n        />{\" \"}\n        and sent buffer{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.sentBuffer}\n        />\n        .\n      </p>\n    );\n  };\n\n  const ReceivedServerOperationWhileSynchronizedVisualization: FunctionComponent<ReceivedServerOperationWhileSynchronized<\n    OpT\n  >> = (logEntry) => {\n    const classes = useStyles();\n\n    return (\n      <p>\n        Received operation{\" \"}\n        <OperationVisualization\n          className={classes.inlineOperation}\n          operation={logEntry.receivedOperation}\n        />{\" \"}\n        from the server and immediately applied it to the document.\n      </p>\n    );\n  };\n\n  const ReceivedServerOperationWhileAwaitingOperationVisualization: FunctionComponent<ReceivedServerOperationWhileAwaitingOperation<\n    OpT\n  >> = (logEntry) => {\n    const {\n      receivedOperation,\n      transformedReceivedOperation,\n      awaitedOperation,\n      transformedAwaitedOperation,\n    } = logEntry;\n    const classes = useStyles();\n\n    const topLeft = { x: 20, y: 15 };\n    const topRight = { x: 125, y: 20 };\n    const bottomLeft = { x: 15, y: 120 };\n    const bottomRight = { x: 120, y: 125 };\n\n    const arrows: ArrowDiagramArrowProps<OpT>[] = [\n      {\n        operation: awaitedOperation,\n        start: topLeft,\n        end: topRight,\n        tooltipPlacement: \"top\",\n      },\n      {\n        operation: transformedAwaitedOperation,\n        start: bottomLeft,\n        end: bottomRight,\n        tooltipPlacement: \"bottom\",\n      },\n      {\n        operation: receivedOperation,\n        start: topLeft,\n        end: bottomLeft,\n        tooltipPlacement: \"left\",\n      },\n      {\n        operation: transformedReceivedOperation,\n        start: topRight,\n        end: bottomRight,\n        tooltipPlacement: \"right\",\n      },\n    ];\n\n    return (\n      <>\n        <ArrowDiagram width={140} height={140} arrows={arrows} />\n        <p style={{ marginTop: \"4px\" }}>\n          Transformed received operation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={receivedOperation}\n          />{\" \"}\n          against the awaited transformation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={awaitedOperation}\n          />{\" \"}\n          resulting in{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={transformedReceivedOperation}\n          />{\" \"}\n          (applied to the editor) and a new awaited operation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={transformedAwaitedOperation}\n          />\n          .\n        </p>\n      </>\n    );\n  };\n\n  const ReceivedServerOperationWhileAwaitingOperationWithBufferVisualization: FunctionComponent<ReceivedServerOperationWhileAwaitingOperationWithBuffer<\n    OpT\n  >> = (logEntry) => {\n    const {\n      receivedOperation,\n      onceTransformedReceivedOperation,\n      twiceTransformedReceivedOperation,\n      awaitedOperation,\n      transformedAwaitedOperation,\n      bufferOperation,\n      transformedBufferOperation,\n    } = logEntry;\n    const classes = useStyles();\n\n    const topLeft = { x: 20, y: 15 };\n    const topCenter = { x: 125, y: 20 };\n    const topRight = { x: 230, y: 25 };\n    const bottomLeft = { x: 15, y: 120 };\n    const bottomCenter = { x: 120, y: 125 };\n    const bottomRight = { x: 225, y: 130 };\n\n    const arrows: ArrowDiagramArrowProps<OpT>[] = [\n      { operation: awaitedOperation, start: topLeft, end: topCenter, tooltipPlacement: \"top\" },\n      {\n        operation: transformedAwaitedOperation,\n        start: bottomLeft,\n        end: bottomCenter,\n        tooltipPlacement: \"bottom\",\n      },\n      { operation: bufferOperation, start: topCenter, end: topRight, tooltipPlacement: \"top\" },\n      {\n        operation: transformedBufferOperation,\n        start: bottomCenter,\n        end: bottomRight,\n        tooltipPlacement: \"bottom\",\n      },\n      {\n        operation: receivedOperation,\n        start: topLeft,\n        end: bottomLeft,\n        tooltipPlacement: \"left\",\n      },\n      {\n        operation: onceTransformedReceivedOperation,\n        start: topCenter,\n        end: bottomCenter,\n        tooltipPlacement: \"bottom\",\n      },\n      {\n        operation: twiceTransformedReceivedOperation,\n        start: topRight,\n        end: bottomRight,\n        tooltipPlacement: \"right\",\n      },\n    ];\n\n    return (\n      <>\n        <ArrowDiagram width={245} height={145} arrows={arrows} />\n        <p style={{ marginTop: \"4px\" }}>\n          Transformed received operation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={receivedOperation}\n          />{\" \"}\n          first against the awaited transformation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={awaitedOperation}\n          />{\" \"}\n          and then against the buffer{\" \"}\n          <OperationVisualization className={classes.inlineOperation} operation={bufferOperation} />{\" \"}\n          resulting in{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={twiceTransformedReceivedOperation}\n          />{\" \"}\n          (applied to the editor), a new awaited operation{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={transformedAwaitedOperation}\n          />{\" \"}\n          and a new buffer{\" \"}\n          <OperationVisualization\n            className={classes.inlineOperation}\n            operation={transformedBufferOperation}\n          />\n          .\n        </p>\n      </>\n    );\n  };\n\n  const renderClientLogEntry = (\n    clientLogEntry: ClientLogEntry<OpT>,\n  ): NonNullable<React.ReactNode> => {\n    switch (clientLogEntry.type) {\n      case ClientEntryType.USER_EDIT_ADDED_TO_BUFFER:\n        return <UserEditAddedToBufferVisualization {...clientLogEntry} />;\n      case ClientEntryType.USER_EDIT_IMMEDIATELY_SENT_TO_SERVER:\n        return <UserEditImmediatelySentToServerVisualization {...clientLogEntry} />;\n      case ClientEntryType.USER_EDIT_STORED_AS_BUFFER:\n        return <UserEditStoredAsBufferVisualization {...clientLogEntry} />;\n      case ClientEntryType.RECEIVED_OWN_OPERATION:\n        return <ReceivedOwnOperationVisualization {...clientLogEntry} />;\n      case ClientEntryType.RECEIVED_OWN_OPERATION_AND_SENT_BUFFER:\n        return <ReceivedOwnOperationAndSentBufferVisualization {...clientLogEntry} />;\n      case ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_SYNCHRONIZED:\n        return <ReceivedServerOperationWhileSynchronizedVisualization {...clientLogEntry} />;\n      case ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION:\n        return <ReceivedServerOperationWhileAwaitingOperationVisualization {...clientLogEntry} />;\n      case ClientEntryType.RECEIVED_SERVER_OPERATION_WHILE_AWAITING_OPERATION_WITH_BUFFER:\n        return (\n          <ReceivedServerOperationWhileAwaitingOperationWithBufferVisualization\n            {...clientLogEntry}\n          />\n        );\n    }\n  };\n\n  return ({ entry, newState }) => {\n    const classes = useStyles();\n\n    const [measuredHeight, setMeasuredHeight] = useState<number | undefined>(undefined);\n\n    const setInnerDiv = useCallback((innerDiv: HTMLDivElement) => {\n      const rect = innerDiv.getBoundingClientRect();\n      setMeasuredHeight(rect.height);\n    }, []);\n\n    return (\n      <div\n        className={classes.clientLogItem}\n        style={\n          measuredHeight === undefined\n            ? { height: \"1px\", margin: \"-100px 0 100px\" }\n            : { height: `${measuredHeight}px`, margin: \"0\" }\n        }\n      >\n        <div ref={setInnerDiv}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"40\"\n            height={measuredHeight ?? \"0\"}\n            style={{ position: \"absolute\", zIndex: -1 }}\n          >\n            <SvgArrow\n              start={{ x: 20, y: (measuredHeight ?? 0) - 2 }}\n              end={{ x: 20, y: 50 }}\n              shaftWidth={8}\n              tipLength={28}\n              tipWidth={20}\n              color=\"#eee\"\n            />\n          </svg>\n          <SynchronizationStateVisualization synchronizationState={newState} />\n          <div className={classes.clientLogEntry}>{renderClientLogEntry(entry)}</div>\n        </div>\n      </div>\n    );\n  };\n};\n\ninterface ClientLogVisualizationProps<OpT> {\n  clientLog: ClientLog<OpT>;\n  initialSynchronizationState: SynchronizationState<OpT>;\n}\n\nexport const makeClientLogVisualization = <OpT extends unknown>(\n  applicationSpecific: ApplicationSpecificOperationComponents<OpT>,\n): FunctionComponent<ClientLogVisualizationProps<OpT>> => {\n  const OperationVisualization = makeOperationVisualization(applicationSpecific);\n  const SynchronizationStateVisualization = makeSynchronizationStateVisualization(\n    OperationVisualization,\n  );\n  const ClientLogItemVisualization = makeClientLogItemVisualization(applicationSpecific);\n\n  return ({ clientLog, initialSynchronizationState }) => {\n    const classes = useStyles();\n\n    return (\n      <div className={classes.clientLog}>\n        {clientLog.map(({ entry, newState }, i) => (\n          <ClientLogItemVisualization\n            key={`log-entry-${clientLog.length - i}`}\n            entry={entry}\n            newState={newState}\n          />\n        ))}\n        <SynchronizationStateVisualization synchronizationState={initialSynchronizationState} />\n      </div>\n    );\n  };\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useIsInitialRender = () => {\n  const [isInitialRender, setIsInitialRender] = useState<boolean>(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsInitialRender(false);\n    }, 10);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return isInitialRender;\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useSharedStyles } from \"./sharedStyles\";\nimport clsx from \"clsx\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { createUseStyles } from \"react-jss\";\nimport { ServerVisualizationState } from \"./types/visualizationState\";\nimport { ApplicationSpecificComponents } from \"./types/applicationSpecific\";\nimport { makeOperationVisualization } from \"./OperationVisualization\";\n\nexport const useServerStyles = createUseStyles({\n  server: {\n    width: \"940px\",\n  },\n  operationInLog: {\n    verticalAlign: \"-4px\",\n    marginRight: \"4px\",\n  },\n  stateTable: {\n    lineHeight: \"32px\",\n    \"& th\": {\n      textAlign: \"left\",\n      fontWeight: \"normal\",\n      color: \"#666\",\n      paddingRight: \"8px\",\n    },\n  },\n});\n\ninterface ServerVisualizationProps<SnapshotT, OpT> {\n  state: ServerVisualizationState<SnapshotT, OpT>;\n}\n\nexport const makeServerVisualization = <SnapshotT extends unknown, OpT extends unknown>(\n  applicationSpecificComponents: ApplicationSpecificComponents<SnapshotT, OpT>,\n): FunctionComponent<ServerVisualizationProps<SnapshotT, OpT>> => {\n  const OperationVisualization = makeOperationVisualization<OpT>(applicationSpecificComponents);\n\n  return ({ state }) => {\n    const sharedClasses = useSharedStyles();\n    const classes = useServerStyles();\n\n    return (\n      <div className={clsx(sharedClasses.site, classes.server)}>\n        <h2>\n          <StorageIcon />\n          Central Server\n        </h2>\n        <table className={classes.stateTable}>\n          <tbody>\n            <tr>\n              <th>Document:</th>\n              <td>{applicationSpecificComponents.renderSnapshot(state.snapshot)}</td>\n            </tr>\n            <tr>\n              <th>Operations:</th>\n              <td>\n                {state.operations.length === 0 ? <>none yet</> : <></>}\n                {state.operations.map((operation) => (\n                  <OperationVisualization\n                    key={operation.meta.id}\n                    operation={operation}\n                    className={classes.operationInLog}\n                  />\n                ))}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n};\n","import React, { FunctionComponent, useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport {\n  Lens,\n  makeAliceLens,\n  makeBobLens,\n  onClientOperation,\n  onClientReceive,\n  onServerReceive,\n} from \"./visualizationStateReducer\";\nimport {\n  ClientAndSocketsVisualizationProps,\n  makeClientAndSocketsVisualization,\n} from \"./ClientAndSocketsVisualization\";\nimport { makeServerVisualization } from \"./ServerVisualization\";\nimport {\n  ClientAndSocketsVisualizationState,\n  SynchronizationStateStatus,\n  VisualizationState,\n} from \"./types/visualizationState\";\nimport { ClientName, Operation } from \"./types/operation\";\nimport {\n  ApplicationSpecificComponents,\n  ApplicationSpecificFunctions,\n} from \"./types/applicationSpecific\";\n\nconst useStyles = createUseStyles({\n  container: {\n    position: \"relative\",\n  },\n  clients: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  alice: {},\n  bob: {},\n});\n\nconst makeInitialVisualizationState = <SnapshotT extends unknown, OpT extends unknown>(\n  initialSnapshot: SnapshotT,\n): VisualizationState<SnapshotT, OpT> => {\n  const initialRevision = 0;\n\n  const initialClientAndSocketsVisualizationState: ClientAndSocketsVisualizationState<\n    SnapshotT,\n    OpT\n  > = {\n    toServer: [],\n    fromServer: [],\n    initialSynchronizationState: {\n      status: SynchronizationStateStatus.SYNCHRONIZED,\n      serverRevision: initialRevision,\n    },\n    clientLog: [],\n    snapshot: initialSnapshot,\n  };\n\n  return {\n    alice: initialClientAndSocketsVisualizationState,\n    bob: initialClientAndSocketsVisualizationState,\n    server: {\n      operations: [],\n      snapshot: initialSnapshot,\n    },\n  };\n};\n\nexport const makeVisualization = <SnapshotT, OpT>(\n  applicationSpecificFunctions: ApplicationSpecificFunctions<SnapshotT, OpT>,\n  applicationSpecificComponents: ApplicationSpecificComponents<SnapshotT, OpT>,\n): FunctionComponent<{ initialSnapshot: SnapshotT }> => {\n  const ServerVisualization = makeServerVisualization(applicationSpecificComponents);\n  const ClientAndSocketsVisualization = makeClientAndSocketsVisualization(\n    applicationSpecificComponents,\n  );\n  const aliceLens = makeAliceLens<SnapshotT, OpT>();\n  const bobLens = makeBobLens<SnapshotT, OpT>();\n\n  return ({ initialSnapshot }) => {\n    const classes = useStyles();\n\n    const [visualizationState, setVisualizationState] = useState<\n      VisualizationState<SnapshotT, OpT>\n    >(() => makeInitialVisualizationState(initialSnapshot));\n\n    const makeClientProps = (\n      clientLens: Lens<\n        VisualizationState<SnapshotT, OpT>,\n        ClientAndSocketsVisualizationState<SnapshotT, OpT>\n      >,\n      clientName: ClientName,\n    ): Pick<\n      ClientAndSocketsVisualizationProps<SnapshotT, OpT>,\n      \"state\" | \"onClientOperation\" | \"onServerReceiveClick\" | \"onClientReceiveClick\"\n    > => ({\n      state: clientLens.get(visualizationState),\n      onClientOperation: (operation) => {\n        setVisualizationState((visualizationState) =>\n          onClientOperation(\n            applicationSpecificFunctions,\n            visualizationState,\n            clientLens,\n            clientName,\n            operation,\n          ),\n        );\n      },\n      onServerReceiveClick: () => {\n        setVisualizationState((visualizationState) =>\n          onServerReceive(applicationSpecificFunctions, visualizationState, clientLens),\n        );\n      },\n      onClientReceiveClick: () => {\n        let transformedReceivedOperation: Operation<OpT> | undefined = undefined;\n        setVisualizationState((visualizationState) => {\n          const { newState, transformedReceivedOperationToApply } = onClientReceive(\n            applicationSpecificFunctions,\n            visualizationState,\n            clientLens,\n          );\n          transformedReceivedOperation = transformedReceivedOperationToApply;\n          return newState;\n        });\n        return transformedReceivedOperation;\n      },\n    });\n\n    return (\n      <div className={classes.container}>\n        <ServerVisualization state={visualizationState.server} />\n        <div className={classes.clients}>\n          <ClientAndSocketsVisualization\n            clientName={ClientName.Alice}\n            className={classes.alice}\n            {...makeClientProps(aliceLens, ClientName.Alice)}\n          />\n          <ClientAndSocketsVisualization\n            clientName={ClientName.Bob}\n            className={classes.bob}\n            {...makeClientProps(bobLens, ClientName.Bob)}\n          />\n        </div>\n      </div>\n    );\n  };\n};\n","import React, {\n  forwardRef,\n  ForwardRefExoticComponent,\n  PropsWithoutRef,\n  RefAttributes,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { EditorHandle, EditorProps } from \"../generic/types/applicationSpecific\";\nimport { Editor, EditorChangeLinkedList, EditorConfiguration } from \"codemirror\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport { createUseStyles } from \"react-jss\";\n\nimport \"cm-show-invisibles\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\n\nexport const replaceInvisibleCharacters = (str: string): string =>\n  str.replace(/\\n/g, \"¬\").replace(/ /g, \"·\");\n\nconst useCodeMirrorStyles = createUseStyles({\n  codeMirrorContainer: {\n    border: \"1px solid #ccc\",\n    flex: \"1\",\n    \"& .CodeMirror\": {\n      height: \"150px\",\n    },\n  },\n});\n\ndeclare module \"codemirror\" {\n  interface EditorConfiguration {\n    showInvisibles: true; // provided by addon 'cm-show-invisibles'\n  }\n}\n\nconst editorConfiguration: EditorConfiguration = {\n  lineNumbers: true,\n  showInvisibles: true,\n};\n\nexport const makeCodeMirrorComponent = <OpT extends unknown>(\n  applyOperationToCodeMirror: (operation: OpT, editor: Editor) => void,\n  operationFromCodeMirrorChanges: (changes: EditorChangeLinkedList[], editor: Editor) => OpT,\n): ForwardRefExoticComponent<\n  PropsWithoutRef<EditorProps<string, OpT>> & RefAttributes<EditorHandle<OpT>>\n> =>\n  forwardRef<EditorHandle<OpT>, EditorProps<string, OpT>>(({ snapshot, onUserChange }, ref) => {\n    const codeMirrorClasses = useCodeMirrorStyles();\n\n    const [initialText] = useState(() => snapshot);\n\n    const [editor, setEditor] = useState<Editor | undefined>(undefined);\n\n    const applyingOperationFromServerRef = useRef<boolean>(false);\n\n    const onChanges = useCallback(\n      (editor: Editor, changes: EditorChangeLinkedList[]) => {\n        if (!applyingOperationFromServerRef.current) {\n          onUserChange(operationFromCodeMirrorChanges(changes, editor));\n        }\n      },\n      [onUserChange, applyingOperationFromServerRef],\n    );\n\n    useEffect(() => {\n      if (editor !== undefined) {\n        editor.on(\"changes\", onChanges);\n        return () => {\n          editor.off(\"changes\", onChanges);\n        };\n      }\n    }, [editor, onChanges]);\n\n    useImperativeHandle(ref, () => ({\n      applyOperation(textOperation) {\n        if (editor !== undefined) {\n          applyingOperationFromServerRef.current = true;\n          applyOperationToCodeMirror(textOperation, editor);\n          applyingOperationFromServerRef.current = false;\n        }\n      },\n    }));\n\n    return (\n      <CodeMirror\n        className={codeMirrorClasses.codeMirrorContainer}\n        options={editorConfiguration}\n        value={initialText}\n        editorDidMount={setEditor}\n      />\n    );\n  });\n\nexport const renderSnapshot = (snapshot: string): React.ReactNode => (\n  <span\n    style={{\n      whiteSpace: \"pre\",\n      backgroundColor: \"white\",\n      fontFamily: \"monospace\",\n    }}\n  >\n    {replaceInvisibleCharacters(snapshot)}\n  </span>\n);\n\nexport const initialText = \"Lorem ipsum\";\n","import { TextOperation } from \"ot\";\nimport { Doc, Position, Editor, EditorChangeLinkedList } from \"codemirror\";\n\nfunction cmpPos(a: Position, b: Position) {\n  if (a.line < b.line) {\n    return -1;\n  }\n  if (a.line > b.line) {\n    return 1;\n  }\n  if (a.ch < b.ch) {\n    return -1;\n  }\n  if (a.ch > b.ch) {\n    return 1;\n  }\n  return 0;\n}\nfunction posLe(a: Position, b: Position) {\n  return cmpPos(a, b) <= 0;\n}\n\nfunction codemirrorDocLength(doc: Doc) {\n  return doc.indexFromPos({ line: doc.lastLine(), ch: 0 }) + doc.getLine(doc.lastLine()).length;\n}\n\nexport class CodeMirrorAdapter {\n  // Converts a CodeMirror change array (as obtained from the 'changes' event\n  // in CodeMirror v4) or single change or linked list of changes (as returned\n  // by the 'change' event in CodeMirror prior to version 4) into a\n  // TextOperation and its inverse and returns them as a two-element array.\n  static operationFromCodeMirrorChanges(\n    changes: EditorChangeLinkedList[],\n    doc: Doc,\n  ): [TextOperation, TextOperation] {\n    // Approach: Replay the changes, beginning with the most recent one, and\n    // construct the operation and its inverse. We have to convert the position\n    // in the pre-change coordinate system to an index. We have a method to\n    // convert a position in the coordinate system after all changes to an index,\n    // namely CodeMirror's `indexFromPos` method. We can use the information of\n    // a single change object to convert a post-change coordinate system to a\n    // pre-change coordinate system. We can now proceed inductively to get a\n    // pre-change coordinate system for all changes in the linked list.\n    // A disadvantage of this approach is its complexity `O(n^2)` in the length\n    // of the linked list of changes.\n\n    let docEndLength = codemirrorDocLength(doc);\n    let operation = new TextOperation().retain(docEndLength);\n    let inverse = new TextOperation().retain(docEndLength);\n\n    let indexFromPos = (pos: Position) => doc.indexFromPos(pos);\n\n    const last = <T>(arr: T[]) => arr[arr.length - 1];\n\n    const sumLengths = (strArr: string[]) => {\n      if (strArr.length === 0) {\n        return 0;\n      }\n      var sum = 0;\n      for (var i = 0; i < strArr.length; i++) {\n        sum += strArr[i].length;\n      }\n      return sum + strArr.length - 1;\n    };\n\n    function updateIndexFromPos(\n      indexFromPos: (pos: Position) => number,\n      change: EditorChangeLinkedList,\n    ): (pos: Position) => number {\n      return function (pos: Position) {\n        if (posLe(pos, change.from)) {\n          return indexFromPos(pos);\n        }\n        if (posLe(change.to, pos)) {\n          return (\n            indexFromPos({\n              line: pos.line + change.text.length - 1 - (change.to.line - change.from.line),\n              ch:\n                change.to.line < pos.line\n                  ? pos.ch\n                  : change.text.length <= 1\n                  ? pos.ch - (change.to.ch - change.from.ch) + sumLengths(change.text)\n                  : pos.ch - change.to.ch + last(change.text).length,\n            }) +\n            sumLengths(change.removed ?? []) -\n            sumLengths(change.text)\n          );\n        }\n        if (change.from.line === pos.line) {\n          return indexFromPos(change.from) + pos.ch - change.from.ch;\n        }\n        return (\n          indexFromPos(change.from) +\n          sumLengths((change.removed ?? []).slice(0, pos.line - change.from.line)) +\n          1 +\n          pos.ch\n        );\n      };\n    }\n\n    for (var i = changes.length - 1; i >= 0; i--) {\n      var change = changes[i];\n      indexFromPos = updateIndexFromPos(indexFromPos, change);\n\n      var fromIndex = indexFromPos(change.from);\n      var restLength = docEndLength - fromIndex - sumLengths(change.text);\n\n      const removedLines: string[] = change.removed ?? [];\n\n      operation = new TextOperation()\n        .retain(fromIndex)\n        .delete(sumLengths(removedLines))\n        .insert(change.text.join(\"\\n\"))\n        .retain(restLength)\n        .compose(operation);\n\n      inverse = inverse.compose(\n        new TextOperation()\n          .retain(fromIndex)\n          .delete(sumLengths(change.text))\n          .insert(removedLines.join(\"\\n\"))\n          .retain(restLength),\n      );\n\n      docEndLength += sumLengths(removedLines) - sumLengths(change.text);\n    }\n\n    return [operation, inverse];\n  }\n\n  // Singular form for backwards compatibility.\n  static operationFromCodeMirrorChange(changes: EditorChangeLinkedList[], doc: Doc) {\n    return CodeMirrorAdapter.operationFromCodeMirrorChanges(changes, doc);\n  }\n\n  // Apply an operation to a CodeMirror instance.\n  static applyOperationToCodeMirror(operation: TextOperation, cm: Editor) {\n    cm.operation(function () {\n      const ops = operation.ops;\n      let index: number = 0; // holds the current index into CodeMirror's content\n      for (var i = 0, l = ops.length; i < l; i++) {\n        var op = ops[i];\n        if (TextOperation.isRetain(op)) {\n          index += op as number;\n        } else if (TextOperation.isInsert(op)) {\n          cm.replaceRange(op as string, cm.posFromIndex(index));\n          index += (op as string).length;\n        } else if (TextOperation.isDelete(op)) {\n          var from = cm.posFromIndex(index);\n          var to = cm.posFromIndex(index - (op as number));\n          cm.replaceRange(\"\", from, to);\n        }\n      }\n    });\n  }\n}\n","import {\n  ApplicationSpecificComponents,\n  ApplicationSpecificFunctions,\n} from \"../generic/types/applicationSpecific\";\nimport { TextOperation } from \"ot\";\nimport {\n  makeCodeMirrorComponent,\n  renderSnapshot,\n  replaceInvisibleCharacters,\n} from \"./plainTextShared\";\nimport { CodeMirrorAdapter } from \"./codemirror-adapter\";\nimport { Editor } from \"codemirror\";\nimport React from \"react\";\n\nenum BasicTextOperationType {\n  Insert = \"INSERT\",\n  Delete = \"DELETE\",\n}\n\ninterface InsertTextOperation {\n  type: BasicTextOperationType.Insert;\n  position: number;\n  content: string;\n}\n\ninterface DeleteTextOperation {\n  type: BasicTextOperationType.Delete;\n  position: number;\n  length: number;\n}\n\ntype BasicTextOperation = InsertTextOperation | DeleteTextOperation;\n\ntype AggregatedBasicTextOperation = BasicTextOperation[];\n\nconst makeInsertOperation = (position: number, content: string): InsertTextOperation => ({\n  type: BasicTextOperationType.Insert,\n  position,\n  content,\n});\n\nconst makeDeleteOperation = (position: number, length: number): [] | [DeleteTextOperation] =>\n  length === 0\n    ? []\n    : [\n        {\n          type: BasicTextOperationType.Delete,\n          position,\n          length,\n        },\n      ];\n\nfunction textOperationToAggregatedBasicTextOperation(\n  textOperation: TextOperation,\n): AggregatedBasicTextOperation {\n  const aggregatedBasicTextOperation: AggregatedBasicTextOperation = [];\n  let pos = 0;\n  for (let op of textOperation.ops) {\n    if (typeof op === \"string\") {\n      aggregatedBasicTextOperation.push(makeInsertOperation(pos, op));\n      pos += op.length;\n    } else {\n      if (op < 0) {\n        aggregatedBasicTextOperation.push(...makeDeleteOperation(pos, -op));\n      } else {\n        pos += op;\n      }\n    }\n  }\n  return aggregatedBasicTextOperation;\n}\n\nfunction aggregatedBasicTextOperationToTextOperation(\n  aggregatedBasicTextOperation: AggregatedBasicTextOperation,\n  textLength: number,\n): TextOperation {\n  let textOperation = new TextOperation().retain(textLength);\n  for (let basicTextOperation of aggregatedBasicTextOperation) {\n    switch (basicTextOperation.type) {\n      case BasicTextOperationType.Insert:\n        textOperation = textOperation.compose(\n          new TextOperation()\n            .retain(basicTextOperation.position)\n            .insert(basicTextOperation.content)\n            .retain(textLength - basicTextOperation.position),\n        );\n        textLength += basicTextOperation.content.length;\n        break;\n      case BasicTextOperationType.Delete:\n        textOperation = textOperation.compose(\n          new TextOperation()\n            .retain(basicTextOperation.position)\n            .delete(basicTextOperation.length)\n            .retain(textLength - basicTextOperation.position - basicTextOperation.length),\n        );\n        textLength -= basicTextOperation.length;\n        break;\n    }\n  }\n  return textOperation;\n}\n\nconst CodeMirrorComponent = makeCodeMirrorComponent<AggregatedBasicTextOperation>(\n  (operation: AggregatedBasicTextOperation, editor: Editor) => {\n    const textLength = editor.getDoc().getValue().length; // TODO: can we implement this more efficiently?\n    CodeMirrorAdapter.applyOperationToCodeMirror(\n      aggregatedBasicTextOperationToTextOperation(operation, textLength),\n      editor,\n    );\n  },\n  (changes, editor) => {\n    const [operation] = CodeMirrorAdapter.operationFromCodeMirrorChanges(changes, editor);\n    return textOperationToAggregatedBasicTextOperation(operation);\n  },\n);\n\nconst renderBasicOperation = (basicTextOperation: BasicTextOperation): string => {\n  switch (basicTextOperation.type) {\n    case BasicTextOperationType.Insert:\n      return `Insert(pos=${basicTextOperation.position}, content=\"${replaceInvisibleCharacters(\n        basicTextOperation.content,\n      )\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\"/g, '\\\\\"')}\")`;\n    case BasicTextOperationType.Delete:\n      return `Delete(pos=${basicTextOperation.position}, length=${basicTextOperation.length})`;\n  }\n};\n\nexport const plainTextWithBasicOperationsComponents: ApplicationSpecificComponents<\n  string,\n  AggregatedBasicTextOperation\n> = {\n  renderOperation(operation: AggregatedBasicTextOperation): React.ReactNode {\n    return operation.map((op, i) => <p key={i}>{renderBasicOperation(op)}</p>);\n  },\n  renderSnapshot,\n  EditorComponent: CodeMirrorComponent,\n};\n\nfunction transformInsertAgainstDeleteTextOperation(\n  a: InsertTextOperation,\n  b: DeleteTextOperation,\n): [InsertTextOperation, DeleteTextOperation[]] {\n  if (a.position <= b.position) {\n    return [a, makeDeleteOperation(b.position + a.content.length, b.length)];\n  }\n  if (b.position + b.length <= a.position) {\n    return [makeInsertOperation(a.position - b.length, a.content), [b]];\n  }\n  // remaining case: insert in middle of deleted text\n  const deletedLengthBeforeInsertion = a.position - b.position;\n  return [\n    makeInsertOperation(b.position, a.content),\n    // delete around newly inserted text:\n    [\n      ...makeDeleteOperation(b.position, deletedLengthBeforeInsertion),\n      ...makeDeleteOperation(\n        b.position + a.content.length,\n        b.length - deletedLengthBeforeInsertion,\n      ),\n    ],\n  ];\n}\n\nfunction transformBasicTextOperation(\n  a: BasicTextOperation,\n  b: BasicTextOperation,\n): [BasicTextOperation[], BasicTextOperation[]] {\n  if (a.type === BasicTextOperationType.Insert) {\n    if (b.type === BasicTextOperationType.Insert) {\n      // case: both insert\n      if (a.position <= b.position) {\n        return [[a], [makeInsertOperation(b.position + a.content.length, b.content)]];\n      } else {\n        return [[makeInsertOperation(a.position + b.content.length, a.content)], [b]];\n      }\n    } else {\n      // case: a insert, b delete\n      const [aPrime, bPrime] = transformInsertAgainstDeleteTextOperation(a, b);\n      return [[aPrime], bPrime];\n    }\n  } else {\n    if (b.type === BasicTextOperationType.Insert) {\n      // case: a delete, b insert\n      const [bPrime, aPrime] = transformInsertAgainstDeleteTextOperation(b, a);\n      return [aPrime, [bPrime]];\n    } else {\n      // case: both delete\n      if (a.position + a.length < b.position) {\n        return [[a], makeDeleteOperation(b.position - a.length, b.length)];\n      }\n      if (b.position + b.length < a.position) {\n        return [makeDeleteOperation(a.position - b.length, a.length), [b]];\n      }\n      // overlapping\n      const minPosition = Math.min(a.position, b.position);\n      const maxEndPosition = Math.max(a.position + a.length, b.position + b.length);\n      const totalLength = maxEndPosition - minPosition;\n      return [\n        makeDeleteOperation(minPosition, totalLength - b.length),\n        makeDeleteOperation(minPosition, totalLength - a.length),\n      ];\n    }\n  }\n}\n\nfunction transformSingleAgainstList(\n  a: BasicTextOperation,\n  bs: BasicTextOperation[],\n): [BasicTextOperation[], BasicTextOperation[]] {\n  if (bs.length === 0) {\n    return [[a], bs];\n  }\n  const [headB, ...tailBs] = bs;\n  const [aPrimes, headBPrimes] = transformBasicTextOperation(a, headB);\n  const [aPrimesPrimes, tailBPrimes] = transformListAgainstList(aPrimes, tailBs);\n  return [aPrimesPrimes, [...headBPrimes, ...tailBPrimes]];\n}\n\nfunction transformListAgainstList(\n  as: BasicTextOperation[],\n  bs: BasicTextOperation[],\n): [BasicTextOperation[], BasicTextOperation[]] {\n  let currBs = bs;\n  const asPrime = as.flatMap((a) => {\n    const [aPrimes, bsPrime] = transformSingleAgainstList(a, currBs);\n    currBs = bsPrime;\n    return aPrimes;\n  });\n  return [asPrime, currBs];\n}\n\nexport const plainTextWithBasicOperationsFunctions: ApplicationSpecificFunctions<\n  string,\n  AggregatedBasicTextOperation\n> = {\n  transform: transformListAgainstList,\n  compose(first: AggregatedBasicTextOperation, second: AggregatedBasicTextOperation) {\n    return [...first, ...second];\n  },\n  apply(operation: AggregatedBasicTextOperation, snapshot: string) {\n    return aggregatedBasicTextOperationToTextOperation(operation, snapshot.length).apply(snapshot);\n  },\n};\n","import React from \"react\";\nimport { makeVisualization } from \"./generic/Visualization\";\nimport { createUseStyles } from \"react-jss\";\nimport { OperationHoverProvider } from \"./generic/OperationHoverProvider\";\nimport { initialText } from \"./applicationSpecific/plainTextShared\";\nimport {\n  plainTextWithBasicOperationsComponents,\n  plainTextWithBasicOperationsFunctions,\n} from \"./applicationSpecific/plainTextWithBasicOperations\";\n\nconst useStyles = createUseStyles({\n  wrapper: {\n    width: \"940px\",\n    margin: \"20px auto\",\n  },\n  header: {\n    margin: \"0 0 40px\",\n    textAlign: \"center\",\n  },\n});\n\n// const Visualization = makeVisualization(\n//   plainTextWithScanningOperationsFunctions,\n//   plainTextWithScanningOperationsComponents,\n// );\n\nconst Visualization = makeVisualization(\n  plainTextWithBasicOperationsFunctions,\n  plainTextWithBasicOperationsComponents,\n);\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <OperationHoverProvider>\n      <div className={classes.wrapper}>\n        <h1 className={classes.header}>Visualization of OT with a central server</h1>\n        <Visualization initialSnapshot={initialText} />\n      </div>\n    </OperationHoverProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}